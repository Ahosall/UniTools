'''
Exploit - Tools
'''

# Imports
from time import sleep as wait

# --- Utils
from src.utils.configs import getSttsTool
from src.utils.functions import update, install, clone, cc
from src.utils.languages import lang
from src.utils.colorFunc import colorTreatment

# Tools
# 00 | XAttacker
def XAttacker():
  clone(
    author='Moham3dRiahi', 
    repo='XAttacker'
  )
  cc(('exploit', 'XAttacker'), 'XAttacker has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 01 | Routersploit
def routersploit():
  clone(
    author='threat9', 
    repo='routersploit'
  )
  cc(('exploit', 'routersploit'), 'Routersploit has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 02 | SVScanner
def SVScanner():
  clone(
    author='radenvodka', 
    repo='SVScanner'
  )
  cc(('exploit', 'SVScanner'), 'SVScanner has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 03 | RevsliderAutoExploiter
def RevsliderAutoExploiter():
  clone(
    author='kyuoko', 
    repo='Revslider-Auto-Exploiter'
  )
  cc(('exploit', 'RevsliderAutoExploiter'), 'Revslider Auto Exploiter has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 04 | sqlmap
def sqlmap():
  clone(
    author='sqlmapproject', 
    repo='sqlmap'
  )
  cc(('exploit', 'sqlmap'), 'Sqlmap has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 05 | exploitdb
def exploitdb():
  clone(
    author='offensive-security', 
    repo='exploitdb'
  )
  cc(('exploit', 'exploitdb'), 'Exploitdb has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 06 | Pompem
def Pompem():
  clone(
    author='rfunix', 
    repo='Pompem'
  )
  cc(('exploit', 'Pompem'), 'Pompem has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 07 | OWScan
def OWScan():
  clone(
    author='Gameye98', 
    repo='OWScan'
  )
  cc(('exploit', 'OWScan'), 'OWScan has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 08 | sqlscan
def sqlscan():
  clone(
    author='Cvar1984', 
    repo='sqlscan'
  )
  cc(('exploit', 'sqlscan'), 'sqlscan has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 09 | DTECT1
def DTECT1():
  clone(
    author='shawarkhanethicalhacker', 
    repo='D-TECT-1'
  )
  cc(('exploit', 'DTECT1'), 'D-TECT-1 has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 10 | Striker
def Striker():
  clone(
    author='s0md3v', 
    repo='Striker'
  )
  cc(('exploit', 'Striker'), 'Striker has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 11 | SH33LL
def SH33LL():
  clone(
    author='LOoLzeC', 
    repo='SH33LL'
  )
  cc(('exploit', 'SH33LL'), 'SH33LL has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 12 | Xshell
def Xshell():
  clone(
    author='Manisso', 
    repo='Xshell'
  )
  cc(('exploit', 'Xshell'), 'Xshell has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 13 | sqlninja
def sqlninja():
  clone(
    author='xxgrunge', 
    repo='sqlninja'
  )
  cc(('exploit', 'sqlninja'), 'sqlninja has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 14 | DirAttack
def DirAttack():
  update()
  install('git python3')
  clone(
    author='Ranginang67', 
    repo='DirAttack',
    installer='py3'
  )
  cc(('exploit', 'DirAttack'), 'DirAttack has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'
# 15 | DirKiller
def DirKiller():
  clone(
    author='Zian25', 
    repo='DirKiller'
  )
  cc(('exploit', 'DirKiller'), 'DirKiller has been successfully cloned or installed... To access it go to the tools folder.')
  return 'restart'

# Menu
def menu():  
  stts = getSttsTool()['exploit']
  items = [
    '            ',
    '=== {}'.format(lang()['tools']['exploit']),
    '  {}[01]{} XAttacker              {}'.format('_CYAN_', stts['XAttacker']['Status'], '_RESET_'),
    '  {}[02]{} Routersploit           {}'.format('_CYAN_', stts['routersploit']['Status'], '_RESET_'),
    '  {}[03]{} SVScanner              {}'.format('_CYAN_', stts['SVScanner']['Status'], '_RESET_'),
    '  {}[04]{} RevsliderAutoExploiter {}'.format('_CYAN_', stts['RevsliderAutoExploiter']['Status'], '_RESET_'),
    '  {}[05]{} Sqlmap                 {}'.format('_CYAN_', stts['sqlmap']['Status'], '_RESET_'),
    '  {}[06]{} Exploitdb              {}'.format('_CYAN_', stts['exploitdb']['Status'], '_RESET_'),
    '  {}[07]{} Pompem                 {}'.format('_CYAN_', stts['Pompem']['Status'], '_RESET_'),
    '  {}[08]{} OWScan                 {}'.format('_CYAN_', stts['OWScan']['Status'], '_RESET_'),
    '  {}[09]{} sqlscan                {}'.format('_CYAN_', stts['sqlscan']['Status'], '_RESET_'),
    '  {}[10]{} DTECT1                 {}'.format('_CYAN_', stts['DTECT1']['Status'], '_RESET_'),
    '  {}[11]{} Striker                {}'.format('_CYAN_', stts['Striker']['Status'], '_RESET_'),
    '  {}[12]{} SH33LL-Tracer          {}'.format('_CYAN_', stts['SH33LL']['Status'], '_RESET_'),
    '  {}[13]{} Xshell                 {}'.format('_CYAN_', stts['Xshell']['Status'], '_RESET_'),
    '  {}[14]{} sqlninja-scanner       {}'.format('_CYAN_', stts['sqlninja']['Status'], '_RESET_'),
    '  {}[15]{} DirAttack              {}'.format('_CYAN_', stts['DirAttack']['Status'], '_RESET_'),
    '  {}[16]{} DirKiller              {}'.format('_CYAN_', stts['DirKiller']['Status'], '_RESET_'),
    '  {}[00]{} {}                     {}'.format('_CYAN_', '_RESET_', lang()['goBack']),
    '                                  ',
    '  {}Green:{} Installed or Clonned '.format('_GREEN_', '_RESET_'),
		'  {}White:{} Not Installed or Clonned '.format('_WHITE_', '_RESET_'),
		'                                  ',
  ]

  for item in items:
    print(colorTreatment(item))
    wait(0.01)

  choice = input('  ' + lang()['input'])
  if choice.replace(' ', '') != '' and choice.isnumeric():
    if   int(choice) == 0: return 'restart'
    elif int(choice) == 1: return XAttacker()
    elif int(choice) == 2: return routersploit()
    elif int(choice) == 3: return SVScanner()
    elif int(choice) == 4: return RevsliderAutoExploiter()
    elif int(choice) == 5: return sqlmap()
    elif int(choice) == 6: return exploitdb()
    elif int(choice) == 7: return Pompem()
    elif int(choice) == 8: return OWScan()
    elif int(choice) == 9: return sqlscan()
    elif int(choice) == 10: return DTECT1()
    elif int(choice) == 11: return Striker()
    elif int(choice) == 12: return SH33LL()
    elif int(choice) == 13: return Xshell()
    elif int(choice) == 14: return sqlninja()
    elif int(choice) == 15: return DirAttack()
    elif int(choice) == 16: return DirKiller()
    else: return 'error'
  else: return 'error'