'''
Exploit - Tools
'''

# Imports
from time import sleep as wait

# --- Utils
from src.utils.functions import update, install, clone, cc
from src.utils.languages import lang
from src.utils.colorFunc import colorTreatment

# Tools
# 00 | XAttacker
def XAttacker():
  update()
  clone(
    author='Moham3dRiahi', 
    repo='XAttacker'
  )
  cc('XAttacker foi clonado com sucesso ...')
  return 'restart'
# 01 | Routersploit
def routersploit():
  update()
  clone(
    author='threat9', 
    repo='routersploit'
  )
  cc('Routersploit foi clonado com sucesso ...')
  return 'restart'
# 02 | SVScanner
def SVScanner():
  update()
  clone(
    author='radenvodka', 
    repo='SVScanner'
  )
  cc('SVScanner foi clonado com sucesso ...')
  return 'restart'
# 03 | RevsliderAutoExploiter
def RevsliderAutoExploiter():
  update()
  clone(
    author='kyuoko', 
    repo='Revslider-Auto-Exploiter'
  )
  cc('Revslider Auto Exploiter foi clonado com sucesso ...')
  return 'restart'
# 04 | sqlmap
def sqlmap():
  update()
  clone(
    author='sqlmapproject', 
    repo='sqlmap'
  )
  cc('Sqlmap foi clonado com sucesso ...')
  return 'restart'
# 05 | exploitdb
def exploitdb():
  update()
  clone(
    author='offensive-security', 
    repo='exploitdb'
  )
  cc('Exploitdb foi clonado com sucesso ...')
  return 'restart'
# 06 | Pompem
def Pompem():
  update()
  clone(
    author='rfunix', 
    repo='Pompem'
  )
  cc('Pompem foi clonado com sucesso ...')
  return 'restart'
# 07 | OWScan
def OWScan():
  update()
  clone(
    author='Gameye98', 
    repo='OWScan'
  )
  cc('OWScan foi clonado com sucesso ...')
  return 'restart'
# 08 | sqlscan
def sqlscan():
  update()
  clone(
    author='Cvar1984', 
    repo='sqlscan'
  )
  cc('sqlscan foi clonado com sucesso ...')
  return 'restart'
# 09 | DTECT1
def DTECT1():
  update()
  clone(
    author='shawarkhanethicalhacker', 
    repo='D-TECT-1'
  )
  cc('D-TECT-1 foi clonado com sucesso ...')
  return 'restart'
# 10 | Striker
def Striker():
  update()
  clone(
    author='s0md3v', 
    repo='Striker'
  )
  cc('Striker foi clonado com sucesso ...')
  return 'restart'
# 11 | SH33LL
def SH33LL():
  update()
  clone(
    author='LOoLzeC', 
    repo='SH33LL'
  )
  cc('SH33LL foi clonado com sucesso ...')
  return 'restart'
# 12 | Xshell
def Xshell():
  update()
  clone(
    author='Manisso', 
    repo='Xshell'
  )
  cc('Xshell foi clonado com sucesso ...')
  return 'restart'
# 13 | sqlninja
def sqlninja():
  update()
  clone(
    author='xxgrunge', 
    repo='sqlninja'
  )
  cc('sqlninja foi clonado com sucesso ...')
  return 'restart'
# 14 | DirAttack
def DirAttack():
  update()
  install('git python3')
  clone(
    author='Ranginang67', 
    repo='DirAttack',
    installer='py3'
  )
  cc('DirAttack foi clonado com sucesso ...')
  return 'restart'
# 15 | DirKiller
def DirKiller():
  update()
  clone(
    author='Zian25', 
    repo='DirKiller'
  )
  cc('DirKiller foi clonado com sucesso ...')
  return 'restart'

# Menu
def menu():  
  items = [
    '            ',
    '=== {}'.format(lang()['tools']['exploit']),
    '  {}[1]{} XAttacker              '.format('_CYAN_', '_RESET_'),
    '  {}[2]{} Routersploit           '.format('_CYAN_', '_RESET_'),
    '  {}[3]{} SVScanner              '.format('_CYAN_', '_RESET_'),
    '  {}[4]{} RevsliderAutoExploiter '.format('_CYAN_', '_RESET_'),
    '  {}[5]{} Sqlmap                 '.format('_CYAN_', '_RESET_'),
    '  {}[6]{} Exploitdb              '.format('_CYAN_', '_RESET_'),
    '  {}[7]{} Pompem                 '.format('_CYAN_', '_RESET_'),
    '  {}[8]{} OWScan                 '.format('_CYAN_', '_RESET_'),
    '  {}[9]{} sqlscan                '.format('_CYAN_', '_RESET_'),
    '  {}[10]{} DTECT1                '.format('_CYAN_', '_RESET_'),
    '  {}[11]{} Striker               '.format('_CYAN_', '_RESET_'),
    '  {}[12]{} SH33LL-Tracer         '.format('_CYAN_', '_RESET_'),
    '  {}[13]{} Xshell                '.format('_CYAN_', '_RESET_'),
    '  {}[14]{} sqlninja-scanner      '.format('_CYAN_', '_RESET_'),
    '  {}[15]{} DirAttack             '.format('_CYAN_', '_RESET_'),
    '  {}[16]{} DirKiller             '.format('_CYAN_', '_RESET_'),
    '  {}[00]{} {}                    '.format('_CYAN_', '_RESET_', lang()['goBack']),
    '                                 '
  ]

  for item in items:
    print(colorTreatment(item))
    wait(0.01)

  choice = input('  ' + lang()['input'])

  if choice.replace(' ', '') != '':
    if choice in ['0', '00']:   return 'restart'
    elif choice in ["1", "01"]: return XAttacker()
    elif choice in ["2", "02"]: return routersploit()
    elif choice in ["3", "03"]: return SVScanner()
    elif choice in ["4", "04"]: return RevsliderAutoExploiter()
    elif choice in ["5", "05"]: return sqlmap()
    elif choice in ["6", "06"]: return exploitdb()
    elif choice in ["7", "07"]: return Pompem()
    elif choice in ["8", "08"]: return OWScan()
    elif choice in ["9", "09"]: return sqlscan()
    elif choice in "10": return DTECT1()
    elif choice in "11": return Striker()
    elif choice in "12": return SH33LL()
    elif choice in "13": return Xshell()
    elif choice in "14": return sqlninja()
    elif choice in "15": return DirAttack()
    elif choice in "16": return DirKiller()
    else: return 'error'
  else: return 'error'